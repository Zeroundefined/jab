The rf script
=============

    >>> import rf
    >>> print rf.__doc__
    Script to remove temporary files
    ...

    >>> options, args = rf.parse_options(['-r', '/path'])
    >>> options.recursive is True and '/path' in args
    True

    >>> 'fred*' in rf.get_globs(options)
    True

    >>> '*.fail' in rf.get_globs(options)
    False
    >>> options.python = True
    >>> '*.fail' in rf.get_globs(options)
    True

    >>> '/etc' in rf.get_paths_in('/', 'etc')
    True
    >>> '/etc/bashrc' in rf.get_paths_in('/etc', 'bash*')
    True
    >>> '/etc' not in rf.get_files_in('/', 'etc')  and '/etc/bashrc' in rf.get_files_in('/etc', 'bash*')
    True
    >>> '/etc/csh.cshrc' in rf.get_files_in('/etc', 'c*') and '/etc/cups/cupsd.conf' not in rf.get_files_in('/etc', 'c*')
    True
    >>> '/etc/csh.cshrc' in rf.get_files_under('/etc', 'c*') and '/etc/cups/cupsd.conf' in rf.get_files_under('/etc', 'c*')
    True

    >>> path_to_test = test.path.realpath()
    >>> path_to_parent = path_to_test.parent
    >>> path_to_grandparent = path_to_test.parent.parent
    >>> globs = ['%s.*' % test.path.namebase]
    >>> path_to_test in rf.get_files(path_to_parent, globs, recursive=False)
    True
    >>> path_to_test in rf.get_files(path_to_grandparent, globs, recursive=False)
    False
    >>> path_to_test in rf.get_files(path_to_grandparent, globs, recursive=True)
    True
