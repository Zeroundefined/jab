The locate module
=================

    >>> import locate
    >>> print locate.__doc__
    Methods to run the locate script more exactly

More modules for testing
------------------------

    >>> import os

Mock options
------------

Some methods need options which look like they came from an OptionParser
    >>> class Values:
    ...     pass
    >>> options = Values()
    >>> options.directories = False
    >>> options.files = False
    >>> options.ignore_case = False
    >>> options.basename = False
    >>> options.globs = False

locate
------

The script will need to run locate commands
    >>> print locate._make_locate_command('fred', options)
    /.../locate "fred"

The standard locate command gives many files for its own name
    >>> lines = locate._run_locate('locate', options)
    >>> len(lines) > 10
    True

But the module cuts that down to just the files named locate
    >>> lines = locate._locate('locate', options)
    >>> len(lines) < 10
    True

And everything found has just the filename as "locate"
    >>> not [l for l in lines if os.path.basename(l) != 'locate']
    True

Using options
-------------

We can insist on finding only directories
    >>> options.directories = True

But, it turns out there are no directories called 'locate'
    >>> not locate._locate('locate', options)
    True

So we can use a glob instead
    >>> options.directories = False
    >>> options.globs = True
    >>> locates = locate._locate('lo*te', options)
    >>> locate._path_to_locate() in locates
    True
