#! /bin/bash

exit_without_directory ()
{
    test -z $* && exit 1
    if [[ ! -d $1 ]]; then
        echo $1 is not a directory
        test -f $1 && echo $1 is a file
        exit 1
    fi
}

exit_without_file ()
{
    test -z $* && exit 1
    if [[ ! -f $1 ]]; then
        echo $1 is not a file
        test -d $1 && echo $1 is a directory
        exit 1
    fi
}

set_paths ()
{
    export MAIL_SITE_DIRECTORY=$HOME/Sites/mail
    COVERAGE_DIRECTORY=$MAIL_SITE_DIRECTORY/coverage

    if [[ ! -d $MAIL_SITE_DIRECTORY ]]; then
        mkdir -p $MAIL_SITE_DIRECTORY
        touch $MAIL_SITE_DIRECTORY/index.html
    fi
    [[ ! -d $COVERAGE_DIRECTORY ]] && mkdir -p $COVERAGE_DIRECTORY

    PYTHON=python
    ! $PYTHON -c "all([])" 2> /dev/null && PYTHON=python2.7
    if ! $PYTHON -c "all([])" 2> /dev/null; then
        echo "No suitable python available" >&2
        exit 2
    fi

    MAIL_SOURCE_DIRECTORY=$(readlink -f $(dirname $BASH_SOURCE))
    exit_without_directory $MAIL_SOURCE_DIRECTORY
    FIGLEAF_DATA=$MAIL_SOURCE_DIRECTORY/.figleaf
    MAIL_PY=$MAIL_SOURCE_DIRECTORY/mail.py
    exit_without_file $MAIL_PY
    exit_without_directory $JAB
    exit_without_directory $JAB_PYTHON
    FIGLEAF_DIRECTORY=$JAB_PYTHON/figleaf-latest
    exit_without_directory $FIGLEAF_DIRECTORY
    FIGLEAF_BINARY=$FIGLEAF_DIRECTORY/bin/figleaf
    exit_without_file $FIGLEAF_BINARY
    FIGLEAF_HTML=$FIGLEAF_DIRECTORY/bin/figleaf2html
    exit_without_file $FIGLEAF_HTML
    TESTPATH=$JAB_PYTHON/testing
    exit_without_directory $TESTPATH
    exit_without_directory $PYTHONPATH
}

remove_old_figleaf_data ()
{
    test -f $FIGLEAF_DATA || return
    test -f $1 || return
    local format="-f %m"
    /usr/bin/stat --help >/dev/null 2>&1 && format="--printf %Y"
    local stat_command="/usr/bin/stat $format "
    if [[ $($stat_command $FIGLEAF_DATA) -lt $($stat_command $1) ]]; then
        echo $FIGLEAF_DATA is older than $1
        /bin/rm -f $FIGLEAF_DATA
        break
    fi
}

test_scripts ()
{
    for script in $*
    do
        remove_old_figleaf_data $script
        remove_old_figleaf_data ${script/.py/.test}
        remove_old_figleaf_data ${script/.py/.tests}
    done
    for script in $*
    do
        if ! $PYTHON $FIGLEAF_BINARY -i $TESTPATH/try.py -q ${script/.py/.}; then
            read -p"Test failed, do you want to exit [y]?" -n 1 user_wants_to_exit
            [[ -z $user_wants_to_exit || $user_wants_to_exit =~ [qQyY] ]] && exit
        fi
    done
}

mail ()
{
    $PYTHON $FIGLEAF_BINARY -i $MAIL_PY $*
    $PYTHON $FIGLEAF_HTML $FIGLEAF_DATA -d $COVERAGE_DIRECTORY 2>&1 >/dev/null
}

main ()
{
    set_paths
    cd $MAIL_SOURCE_DIRECTORY
    test_scripts $PYTHONPATH/ansi*.py $PYTHONPATH/colour*.py && mail $*
}

main $*
