
	>>> see()
	bash()    makepath()    see()    see_attributes()    see_methods()
	show()    spread()		sys    test

	>>> see(sys)
	help()    .api_version    .argv    .builtin_module_names    .byteorder
	...

	>>> see(sys,pattern="*a*")
	.api_version    .argv    .builtin_module_names    .call_tracing()
	...

	>>> see(sys,pattern=".all*")

	>>> see(sys,r=".all*")
	.call_tracing()    .callstats()    .getcheckinterval()
	...

	>>> see(sys,pattern="*a*",attributes=True)
	.api_version    .argv    .builtin_module_names    .executable    .flags
	...

	>>> see(sys,pattern="*a*",methods=True)
	.call_tracing()    .callstats()    .displayhook()    .exc_clear()
	...

	>>> from see import see_attributes
	>>> see_attributes(sys,pattern="*a*")
	.api_version    .argv    .builtin_module_names    .executable    .flags
	...

	>>> from see import see_methods
	>>> see_methods(sys,pattern="*a*")
	.call_tracing()    .callstats()    .displayhook()    .exc_clear()
	...

	>>> from see import code
	>>> code(code)
	def code(method):
	    if not callable(method):
		...
	    print '\n'.join(result)
